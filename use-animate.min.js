let states={STOP:3,PAUSE:2,PLAY:1},remap=(e,t)=>e*(t[1]-t[0])/1+t[0];export default function e(){let e=states.STOP,t=0,r=0,s,a,i=()=>{e!==states.PLAY&&(t=performance.now()-r,e=states.PLAY,s=requestAnimationFrame(p))},n=()=>{e=states.STOP,r=0,cancelAnimationFrame(s)},l=()=>{e!==states.PAUSE&&e!==states.STOP&&(e=states.PAUSE,r=performance.now()-t,cancelAnimationFrame(s))},c=e=>{a=(Array.isArray(e)?[...e]:[e]).map(e=>({...e})).map(e=>(e.duration[1]||(e.duration=[0,e.duration]),e._isAlternate="alternate"===e.direction||"alternate-reverse"===e.direction,e._isReverse="reverse"===e.direction||"alternate-reverse"===e.direction,e._reverse=e._isReverse,e._cycles=0,e.repeat=!0===e.repeat?9999999:+e.repeat,e))},o=()=>n(),p=r=>{let i=!1;for(let n of a){let l=(r-t-n.duration[0])/n.duration[1],c=l;n.repeat&&n.repeat>n._cycles&&(c-=n._cycles,n._isAlternate&&(n._reverse=(n._cycles+n._isReverse)%2),n._cycles=Math.trunc(l)),n._reverse&&(c=1-c),c=c<0?0:c>1?1:c,(n.repeat||!n._reverse&&c<1||n._reverse&&c>0)&&(i=!0);let o=n.timing(c);n.remap&&(o=remap(o,n.remap)),n.draw(o)}e===states.PLAY&&i&&(s=requestAnimationFrame(p))};return{play:i,stop:n,pause:l,set:c,destroy:o}};
